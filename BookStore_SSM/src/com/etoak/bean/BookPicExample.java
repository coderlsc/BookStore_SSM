package com.etoak.bean;

import java.util.ArrayList;
import java.util.List;

public class BookPicExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Tue Nov 21 20:14:57 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Tue Nov 21 20:14:57 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Tue Nov 21 20:14:57 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Tue Nov 21 20:14:57 CST 2017
     */
    public BookPicExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Tue Nov 21 20:14:57 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Tue Nov 21 20:14:57 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Tue Nov 21 20:14:57 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Tue Nov 21 20:14:57 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Tue Nov 21 20:14:57 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Tue Nov 21 20:14:57 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Tue Nov 21 20:14:57 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Tue Nov 21 20:14:57 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Tue Nov 21 20:14:57 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Tue Nov 21 20:14:57 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Tue Nov 21 20:14:57 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSavepathIsNull() {
            addCriterion("SAVEPATH is null");
            return (Criteria) this;
        }

        public Criteria andSavepathIsNotNull() {
            addCriterion("SAVEPATH is not null");
            return (Criteria) this;
        }

        public Criteria andSavepathEqualTo(String value) {
            addCriterion("SAVEPATH =", value, "savepath");
            return (Criteria) this;
        }

        public Criteria andSavepathNotEqualTo(String value) {
            addCriterion("SAVEPATH <>", value, "savepath");
            return (Criteria) this;
        }

        public Criteria andSavepathGreaterThan(String value) {
            addCriterion("SAVEPATH >", value, "savepath");
            return (Criteria) this;
        }

        public Criteria andSavepathGreaterThanOrEqualTo(String value) {
            addCriterion("SAVEPATH >=", value, "savepath");
            return (Criteria) this;
        }

        public Criteria andSavepathLessThan(String value) {
            addCriterion("SAVEPATH <", value, "savepath");
            return (Criteria) this;
        }

        public Criteria andSavepathLessThanOrEqualTo(String value) {
            addCriterion("SAVEPATH <=", value, "savepath");
            return (Criteria) this;
        }

        public Criteria andSavepathLike(String value) {
            addCriterion("SAVEPATH like", value, "savepath");
            return (Criteria) this;
        }

        public Criteria andSavepathNotLike(String value) {
            addCriterion("SAVEPATH not like", value, "savepath");
            return (Criteria) this;
        }

        public Criteria andSavepathIn(List<String> values) {
            addCriterion("SAVEPATH in", values, "savepath");
            return (Criteria) this;
        }

        public Criteria andSavepathNotIn(List<String> values) {
            addCriterion("SAVEPATH not in", values, "savepath");
            return (Criteria) this;
        }

        public Criteria andSavepathBetween(String value1, String value2) {
            addCriterion("SAVEPATH between", value1, value2, "savepath");
            return (Criteria) this;
        }

        public Criteria andSavepathNotBetween(String value1, String value2) {
            addCriterion("SAVEPATH not between", value1, value2, "savepath");
            return (Criteria) this;
        }

        public Criteria andShownameIsNull() {
            addCriterion("SHOWNAME is null");
            return (Criteria) this;
        }

        public Criteria andShownameIsNotNull() {
            addCriterion("SHOWNAME is not null");
            return (Criteria) this;
        }

        public Criteria andShownameEqualTo(String value) {
            addCriterion("SHOWNAME =", value, "showname");
            return (Criteria) this;
        }

        public Criteria andShownameNotEqualTo(String value) {
            addCriterion("SHOWNAME <>", value, "showname");
            return (Criteria) this;
        }

        public Criteria andShownameGreaterThan(String value) {
            addCriterion("SHOWNAME >", value, "showname");
            return (Criteria) this;
        }

        public Criteria andShownameGreaterThanOrEqualTo(String value) {
            addCriterion("SHOWNAME >=", value, "showname");
            return (Criteria) this;
        }

        public Criteria andShownameLessThan(String value) {
            addCriterion("SHOWNAME <", value, "showname");
            return (Criteria) this;
        }

        public Criteria andShownameLessThanOrEqualTo(String value) {
            addCriterion("SHOWNAME <=", value, "showname");
            return (Criteria) this;
        }

        public Criteria andShownameLike(String value) {
            addCriterion("SHOWNAME like", value, "showname");
            return (Criteria) this;
        }

        public Criteria andShownameNotLike(String value) {
            addCriterion("SHOWNAME not like", value, "showname");
            return (Criteria) this;
        }

        public Criteria andShownameIn(List<String> values) {
            addCriterion("SHOWNAME in", values, "showname");
            return (Criteria) this;
        }

        public Criteria andShownameNotIn(List<String> values) {
            addCriterion("SHOWNAME not in", values, "showname");
            return (Criteria) this;
        }

        public Criteria andShownameBetween(String value1, String value2) {
            addCriterion("SHOWNAME between", value1, value2, "showname");
            return (Criteria) this;
        }

        public Criteria andShownameNotBetween(String value1, String value2) {
            addCriterion("SHOWNAME not between", value1, value2, "showname");
            return (Criteria) this;
        }

        public Criteria andFmIsNull() {
            addCriterion("FM is null");
            return (Criteria) this;
        }

        public Criteria andFmIsNotNull() {
            addCriterion("FM is not null");
            return (Criteria) this;
        }

        public Criteria andFmEqualTo(String value) {
            addCriterion("FM =", value, "fm");
            return (Criteria) this;
        }

        public Criteria andFmNotEqualTo(String value) {
            addCriterion("FM <>", value, "fm");
            return (Criteria) this;
        }

        public Criteria andFmGreaterThan(String value) {
            addCriterion("FM >", value, "fm");
            return (Criteria) this;
        }

        public Criteria andFmGreaterThanOrEqualTo(String value) {
            addCriterion("FM >=", value, "fm");
            return (Criteria) this;
        }

        public Criteria andFmLessThan(String value) {
            addCriterion("FM <", value, "fm");
            return (Criteria) this;
        }

        public Criteria andFmLessThanOrEqualTo(String value) {
            addCriterion("FM <=", value, "fm");
            return (Criteria) this;
        }

        public Criteria andFmLike(String value) {
            addCriterion("FM like", value, "fm");
            return (Criteria) this;
        }

        public Criteria andFmNotLike(String value) {
            addCriterion("FM not like", value, "fm");
            return (Criteria) this;
        }

        public Criteria andFmIn(List<String> values) {
            addCriterion("FM in", values, "fm");
            return (Criteria) this;
        }

        public Criteria andFmNotIn(List<String> values) {
            addCriterion("FM not in", values, "fm");
            return (Criteria) this;
        }

        public Criteria andFmBetween(String value1, String value2) {
            addCriterion("FM between", value1, value2, "fm");
            return (Criteria) this;
        }

        public Criteria andFmNotBetween(String value1, String value2) {
            addCriterion("FM not between", value1, value2, "fm");
            return (Criteria) this;
        }

        public Criteria andBookidIsNull() {
            addCriterion("BOOKID is null");
            return (Criteria) this;
        }

        public Criteria andBookidIsNotNull() {
            addCriterion("BOOKID is not null");
            return (Criteria) this;
        }

        public Criteria andBookidEqualTo(String value) {
            addCriterion("BOOKID =", value, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidNotEqualTo(String value) {
            addCriterion("BOOKID <>", value, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidGreaterThan(String value) {
            addCriterion("BOOKID >", value, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidGreaterThanOrEqualTo(String value) {
            addCriterion("BOOKID >=", value, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidLessThan(String value) {
            addCriterion("BOOKID <", value, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidLessThanOrEqualTo(String value) {
            addCriterion("BOOKID <=", value, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidLike(String value) {
            addCriterion("BOOKID like", value, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidNotLike(String value) {
            addCriterion("BOOKID not like", value, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidIn(List<String> values) {
            addCriterion("BOOKID in", values, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidNotIn(List<String> values) {
            addCriterion("BOOKID not in", values, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidBetween(String value1, String value2) {
            addCriterion("BOOKID between", value1, value2, "bookid");
            return (Criteria) this;
        }

        public Criteria andBookidNotBetween(String value1, String value2) {
            addCriterion("BOOKID not between", value1, value2, "bookid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated do_not_delete_during_merge Tue Nov 21 20:14:57 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SCOTT.BOOKPIC
     *
     * @mbggenerated Tue Nov 21 20:14:57 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}